#!/bin/bash
#sean@dfstudio
#20190814
#Use `aws lambda invoke` to invoke lambda function IpGeolocationService.

#User input ip address.
ip=$1;

#Check usage and ip address format.
function usageError {
  echo "[ERROR] Incorrect usage of invokeIpGeolocationService."
  echo "Example usage: invokeIpGeolocationService 1.1.1.1";
  exit 1;
}
[[ $ip =~ [0-255]\.[0-255]\.[0-255]\.[0-255] ]] || usageError;

#Temporary files.
tempEventJSONFile="IpGeolocationServiceEvent.json.temp";
tempResponseFile="IpGeolocationServiceResponse.json.temp";

function rmTempFiles {
  rm -f $tempEventJSONFile;
  rm -f $tempResponseFile;
}

#Build JSON for request to service.
printf '{"queryStringParameters":{"ip": "%s"}}' "$ip" > $tempEventJSONFile;

#AWS Lambda CLI `invoke`.	

#Exit if there were AWS errors.
if aws lambda invoke --region us-east-1 --profile default --function-name IpGeoLocationService --payload "file://${tempEventJSONFile}" --cli-binary-format raw-in-base64-out $tempResponseFile; then 
    rmTempFiles && exit 1
fi

#Print response to stdout.
echo
echo "IpGeolocationService response:";
echo
cat $tempResponseFile;

#Cleanup.
rmTempFiles

